@page "/admin/collisions"
@page "/admin"
@inherits OwningComponentBase<ICollisionRepository>

<table class="table table-sm table-striped table-bordered">
    <thead>
        <tr>
            <th>Collision ID</th>
            <th>Collision Date</th>
            <th>Road Name</th>
            <th>City</th>
            <th>County</th>
            <th>Severity</th>
        </tr>
    </thead>
    <tbody>
        @if (CollisionData?.Count() > 0)
        {
            @foreach (var c in CollisionData)
            {
                <tr>
                    <td>@c.CRASH_ID</td>
                    <td>@c.CRASH_DATETIME</td>
                    <td>@c.MAIN_ROAD_NAME</td>
                    <td>@c.CITY</td>
                    <td>@c.COUNTY_NAME</td>
                    <td>@c.CRASH_SEVERITY_ID</td>
                    <td>
                        <NavLink class="btn btn-info btn-sm" href="@GetDetailsUrl(c.CRASH_ID)">Details</NavLink>
                    </td>
                    <td>
                        <NavLink class="btn btn-warning btn-sm" href="@GetEditUrl(c.CRASH_ID)">Edit</NavLink>
                    </td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="@(x => RemoveCollision(c))">Delete</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="8" class="text-center">No Books</td>
            </tr>
        }
    </tbody>
</table>

@code {
    public ICollisionRepository repo => Service;
    public IEnumerable<Collision> CollisionData { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        CollisionData = await repo.Collisions.ToListAsync();
    }

    public string GetDetailsUrl(long id) => $"/admin/collisions/details/{id}";
    public string GetEditUrl(long id) => $"/admin/collisions/edit/{id}";

    public async Task RemoveCollision (Collision c)
    {
        repo.DeleteCollision(c);
        await UpdateData();
    }
}
